-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.1
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity skein is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data : IN STD_LOGIC_VECTOR (511 downto 0);
    output_r : OUT STD_LOGIC_VECTOR (255 downto 0);
    output_r_ap_vld : OUT STD_LOGIC;
    output_r_ap_ack : IN STD_LOGIC;
    firstBlock : IN STD_LOGIC_VECTOR (0 downto 0);
    lastBlock : IN STD_LOGIC_VECTOR (0 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of skein is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "skein,hls_ip_2014_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx485tffg1761-2,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=15.174000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv64_3EEDBA1833EDFC13 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011101101101110100001100000110011111011011111110000010011";
    constant ap_const_lv64_C36FBAF9393AD185 : STD_LOGIC_VECTOR (63 downto 0) := "1100001101101111101110101111100100111001001110101101000110000101";
    constant ap_const_lv64_E7A436CDC4746251 : STD_LOGIC_VECTOR (63 downto 0) := "1110011110100100001101101100110111000100011101000110001001010001";
    constant ap_const_lv64_EC06025E74DD7683 : STD_LOGIC_VECTOR (63 downto 0) := "1110110000000110000000100101111001110100110111010111011010000011";
    constant ap_const_lv64_2A2767A4AE9B94DB : STD_LOGIC_VECTOR (63 downto 0) := "0010101000100111011001111010010010101110100110111001010011011011";
    constant ap_const_lv64_55AEA0614F816E6F : STD_LOGIC_VECTOR (63 downto 0) := "0101010110101110101000000110000101001111100000010110111001101111";
    constant ap_const_lv64_E83590301A79A9EB : STD_LOGIC_VECTOR (63 downto 0) := "1110100000110101100100000011000000011010011110011010100111101011";
    constant ap_const_lv64_CCD044A12FDB3E13 : STD_LOGIC_VECTOR (63 downto 0) := "1100110011010000010001001010000100101111110110110011111000010011";
    constant ap_const_lv62_0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv64_1BD11BDAA9FC1A22 : STD_LOGIC_VECTOR (63 downto 0) := "0001101111010001000110111101101010101001111111000001101000100010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv128_lc_2 : STD_LOGIC_VECTOR (127 downto 0) := "11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_FF00000000000008 : STD_LOGIC_VECTOR (63 downto 0) := "1111111100000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal state : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal keyState : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal byteCounter : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal subkey : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal tweak : STD_LOGIC_VECTOR (191 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal total_round_cast_cast_fu_401_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal total_round_cast_cast_reg_2585 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_reg_2590 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_2595 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_reg_2600 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_2605 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_2610 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_2615 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_reg_2620 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_2625 : STD_LOGIC_VECTOR (63 downto 0);
    signal not_lastBlock_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_lastBlock_reg_2630 : STD_LOGIC_VECTOR (0 downto 0);
    signal round_1_fu_850_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_2490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_output_r_ap_ack : STD_LOGIC;
    signal enableData_2_fu_2571_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal round_reg_355 : STD_LOGIC_VECTOR (5 downto 0);
    signal enableData_1_reg_366 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_97_fu_2524_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal storemerge17_phi_fu_380_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal or_cond1_fu_2509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keyIn_1_fu_2246_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_98_fu_2539_p9 : STD_LOGIC_VECTOR (511 downto 0);
    signal storemerge18_phi_fu_389_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_73_fu_2220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_787_p9 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_5_fu_643_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_761_p9 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_87_fu_2373_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_30_fu_813_p6 : STD_LOGIC_VECTOR (191 downto 0);
    signal tmp_93_fu_2476_p3 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_reg_ioackin_output_r_ap_ack : STD_LOGIC := '0';
    signal tmp_26_fu_553_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_543_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_533_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_523_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_513_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_503_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_493_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal initByteCounter1_fu_631_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_649_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_7_cast_fu_657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_661_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_671_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_681_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_9_fu_685_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal keyState_assign_load_fu_623_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal initKeyState_load_8_fu_615_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal initKeyState_load_8_1_fu_607_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal initKeyState_load_8_2_fu_599_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp2_fu_707_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_fu_701_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal initKeyState_load_8_3_fu_591_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal initKeyState_load_8_4_fu_583_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal initKeyState_load_8_6_fu_567_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp4_fu_725_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal initKeyState_load_8_5_fu_575_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp5_fu_731_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp3_fu_719_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp6_fu_737_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_713_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_749_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_755_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal keyPar_2_7_fu_743_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_695_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_862_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal subround_assign_v_cast_cast_fu_866_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal is_lo_fu_880_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_lo_1_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_fu_908_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_936_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_926_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_962_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_952_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_988_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_978_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1014_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1004_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_1040_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1030_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_1066_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_1056_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_1092_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_1082_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_1_fu_946_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_920_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_1114_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_49_fu_1118_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_61_fu_1136_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_50_fu_1140_p4 : STD_LOGIC_VECTOR (45 downto 0);
    signal is_lo_2_fu_896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_s_fu_1128_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_s_fu_1150_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge2_fu_1158_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_1108_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_3_fu_998_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_2_fu_972_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_1178_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_32_1_fu_1182_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_67_fu_1200_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_39_1_fu_1204_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_33_1_fu_1192_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_1_fu_1214_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge3_fu_1222_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_1_fu_1172_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_5_fu_1050_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_4_fu_1024_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_fu_1242_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_32_2_fu_1246_p4 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_82_fu_1264_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_39_2_fu_1268_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_33_2_fu_1256_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_2_fu_1278_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge4_fu_1286_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_2_fu_1236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_7_fu_1102_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_6_fu_1076_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_88_fu_1306_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_32_3_fu_1310_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_89_fu_1328_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_39_3_fu_1332_p4 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_33_3_fu_1320_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_3_fu_1342_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge5_fu_1350_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_3_fu_1300_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_1166_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_100_fu_1370_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_54_fu_1374_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_101_fu_1392_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_56_fu_1396_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_56_s_fu_1384_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_s_fu_1406_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge6_fu_1414_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_fu_1364_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_3_fu_1358_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_102_fu_1434_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_55_1_fu_1438_p4 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_103_fu_1456_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_62_1_fu_1460_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_56_1_fu_1448_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_1_fu_1470_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge7_fu_1478_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_1_fu_1428_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_2_fu_1294_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_104_fu_1498_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_55_2_fu_1502_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_105_fu_1520_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_62_2_fu_1524_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_56_2_fu_1512_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_2_fu_1534_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge8_fu_1542_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_2_fu_1492_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_1_fu_1230_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_106_fu_1562_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_55_3_fu_1566_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_107_fu_1584_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_62_3_fu_1588_p4 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_56_3_fu_1576_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_3_fu_1598_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge9_fu_1606_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_3_fu_1556_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_1422_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_fu_1626_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_60_fu_1630_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_109_fu_1648_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_62_fu_1652_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_79_s_fu_1640_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_s_fu_1662_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge1_fu_1670_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_1620_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_3_fu_1614_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_110_fu_1690_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_78_1_fu_1694_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_111_fu_1712_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_85_1_fu_1716_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_79_1_fu_1704_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_1_fu_1726_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge10_fu_1734_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_1_fu_1684_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_2_fu_1550_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_fu_1754_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_78_2_fu_1758_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_113_fu_1776_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_85_2_fu_1780_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_79_2_fu_1768_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_2_fu_1790_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge11_fu_1798_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_2_fu_1748_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_1_fu_1486_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_fu_1818_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_78_3_fu_1822_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_115_fu_1840_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_85_3_fu_1844_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_79_3_fu_1832_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_3_fu_1854_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge12_fu_1862_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_3_fu_1812_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_1678_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_fu_1882_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_66_fu_1886_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_117_fu_1904_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_68_fu_1908_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_102_s_fu_1896_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_s_fu_1918_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge13_fu_1926_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_1876_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_3_fu_1870_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_118_fu_1946_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_101_1_fu_1950_p4 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_119_fu_1968_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_108_1_fu_1972_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_102_1_fu_1960_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_1_fu_1982_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge14_fu_1990_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_94_1_fu_1940_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_2_fu_1806_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_120_fu_2010_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_2_fu_2014_p4 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_121_fu_2032_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_108_2_fu_2036_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_102_2_fu_2024_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_2_fu_2046_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge15_fu_2054_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_94_2_fu_2004_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_1_fu_1742_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_122_fu_2074_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_101_3_fu_2078_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_123_fu_2096_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_3_fu_2100_p4 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_102_3_fu_2088_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_3_fu_2110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge16_fu_2118_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_94_3_fu_2068_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_fu_2132_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_1_fu_2143_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_2_fu_2154_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_3_fu_2165_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_4_fu_2176_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_5_fu_2187_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_6_fu_2198_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_7_fu_2209_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_7_fu_2214_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_6_fu_2203_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_5_fu_2192_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_4_fu_2181_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_3_fu_2170_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_2_fu_2159_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_1_fu_2148_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_fu_2137_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal keyIn_fu_2226_p9 : STD_LOGIC_VECTOR (511 downto 0);
    signal subround_fu_874_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_74_fu_2255_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_fu_2265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_78_fu_2289_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_fu_2275_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_124_fu_2315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_80_fu_2305_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_fu_2269_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_fu_2299_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_81_fu_2319_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_126_fu_2369_p1 : STD_LOGIC_VECTOR (319 downto 0);
    signal tmp_125_fu_2365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_fu_2355_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_fu_2345_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_fu_2335_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp8_fu_2397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp7_fu_2391_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_83_fu_2325_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp11_fu_2415_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp12_fu_2421_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp10_fu_2409_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp13_fu_2427_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp9_fu_2403_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_fu_2439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_2445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_2450_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal storemerge_fu_2468_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_92_fu_2460_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal keyPar_3_7_fu_2433_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_96_fu_2514_p4 : STD_LOGIC_VECTOR (447 downto 0);
    signal tmp_112_1_fu_1998_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_2_fu_2062_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_3_fu_2126_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_1934_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_cond2_fu_2566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_135 : BOOLEAN;
    signal ap_sig_bdd_112 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_output_r_ap_ack assign process. --
    ap_reg_ioackin_output_r_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_output_r_ap_ack <= ap_const_logic_0;
            else
                if (ap_sig_bdd_135) then
                    if (not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack)))) then 
                        ap_reg_ioackin_output_r_ap_ack <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = output_r_ap_ack)) then 
                        ap_reg_ioackin_output_r_ap_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- enableData_1_reg_366 assign process. --
    enableData_1_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
                enableData_1_reg_366 <= enableData_2_fu_2571_p3;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                enableData_1_reg_366 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
            end if; 
        end if;
    end process;

    -- keyState assign process. --
    keyState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
                keyState <= storemerge17_phi_fu_380_p4;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                keyState <= tmp_29_fu_787_p9;
            end if; 
        end if;
    end process;

    -- round_reg_355 assign process. --
    round_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
                round_reg_355 <= round_1_fu_850_p2;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                round_reg_355 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    -- state assign process. --
    state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
                state <= storemerge18_phi_fu_389_p4;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                state <= data;
            end if; 
        end if;
    end process;

    -- subkey assign process. --
    subkey_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
                subkey <= tmp_87_fu_2373_p5;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                subkey <= tmp_28_fu_761_p9;
            end if; 
        end if;
    end process;

    -- tweak assign process. --
    tweak_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
                tweak <= tmp_93_fu_2476_p3;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                tweak <= tmp_30_fu_813_p6;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then
                byteCounter <= tmp_5_fu_643_p2;
                not_lastBlock_reg_2630 <= not_lastBlock_fu_839_p2;
                tmp_10_reg_2600 <= data(191 downto 128);
                tmp_11_reg_2605 <= data(255 downto 192);
                tmp_12_reg_2610 <= data(319 downto 256);
                tmp_13_reg_2615 <= data(383 downto 320);
                tmp_16_reg_2620 <= data(447 downto 384);
                tmp_17_reg_2625 <= data(511 downto 448);
                tmp_2_reg_2590 <= tmp_2_fu_409_p1;
                tmp_6_reg_2595 <= data(127 downto 64);
                total_round_cast_cast_reg_2585(0) <= total_round_cast_cast_fu_401_p3(0);
    total_round_cast_cast_reg_2585(2) <= total_round_cast_cast_fu_401_p3(2);
    total_round_cast_cast_reg_2585(4) <= total_round_cast_cast_fu_401_p3(4);
    total_round_cast_cast_reg_2585(5) <= total_round_cast_cast_fu_401_p3(5);
            end if;
        end if;
    end process;
    total_round_cast_cast_reg_2585(1) <= '1';
    total_round_cast_cast_reg_2585(3) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , tmp_14_fu_845_p2 , tmp_94_fu_2490_p2 , ap_sig_ioackin_output_r_ap_ack)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (((tmp_14_fu_845_p2 = ap_const_lv1_0) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif ((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm, tmp_14_fu_845_p2, tmp_94_fu_2490_p2, ap_sig_ioackin_output_r_ap_ack)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_14_fu_845_p2 = ap_const_lv1_0) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, tmp_14_fu_845_p2, tmp_94_fu_2490_p2, ap_sig_ioackin_output_r_ap_ack)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_14_fu_845_p2 = ap_const_lv1_0) and not((not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_sig_ioackin_output_r_ap_ack))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_112 assign process. --
    ap_sig_bdd_112_assign_proc : process(ap_CS_fsm, tmp_14_fu_845_p2)
    begin
                ap_sig_bdd_112 <= ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_135 assign process. --
    ap_sig_bdd_135_assign_proc : process(ap_CS_fsm, tmp_14_fu_845_p2, tmp_94_fu_2490_p2)
    begin
                ap_sig_bdd_135 <= ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)));
    end process;


    -- ap_sig_ioackin_output_r_ap_ack assign process. --
    ap_sig_ioackin_output_r_ap_ack_assign_proc : process(output_r_ap_ack, ap_reg_ioackin_output_r_ap_ack)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_output_r_ap_ack)) then 
            ap_sig_ioackin_output_r_ap_ack <= output_r_ap_ack;
        else 
            ap_sig_ioackin_output_r_ap_ack <= ap_const_logic_1;
        end if; 
    end process;

    enableData_2_fu_2571_p3 <= 
        ap_const_lv64_0 when (or_cond2_fu_2566_p2(0) = '1') else 
        enableData_1_reg_366;
    initByteCounter1_fu_631_p3 <= 
        ap_const_lv64_0 when (firstBlock(0) = '1') else 
        byteCounter;
    initKeyState_load_8_1_fu_607_p3 <= 
        ap_const_lv64_55AEA0614F816E6F when (firstBlock(0) = '1') else 
        tmp_21_fu_503_p4;
    initKeyState_load_8_2_fu_599_p3 <= 
        ap_const_lv64_2A2767A4AE9B94DB when (firstBlock(0) = '1') else 
        tmp_22_fu_513_p4;
    initKeyState_load_8_3_fu_591_p3 <= 
        ap_const_lv64_EC06025E74DD7683 when (firstBlock(0) = '1') else 
        tmp_23_fu_523_p4;
    initKeyState_load_8_4_fu_583_p3 <= 
        ap_const_lv64_E7A436CDC4746251 when (firstBlock(0) = '1') else 
        tmp_24_fu_533_p4;
    initKeyState_load_8_5_fu_575_p3 <= 
        ap_const_lv64_C36FBAF9393AD185 when (firstBlock(0) = '1') else 
        tmp_25_fu_543_p4;
    initKeyState_load_8_6_fu_567_p3 <= 
        ap_const_lv64_3EEDBA1833EDFC13 when (firstBlock(0) = '1') else 
        tmp_26_fu_553_p4;
    initKeyState_load_8_fu_615_p3 <= 
        ap_const_lv64_E83590301A79A9EB when (firstBlock(0) = '1') else 
        tmp_20_fu_493_p4;
    is_lo_1_fu_890_p2 <= (is_lo_fu_880_p1 xor ap_const_lv1_1);
    is_lo_2_fu_896_p3 <= 
        is_lo_1_fu_890_p2 when (tmp_18_fu_884_p2(0) = '1') else 
        is_lo_fu_880_p1;
    is_lo_fu_880_p1 <= round_reg_355(1 - 1 downto 0);
    keyIn_1_fu_2246_p3 <= 
        keyIn_fu_2226_p9 when (tmp_73_fu_2220_p2(0) = '1') else 
        keyState;
    keyIn_fu_2226_p9 <= (((((((tmp_116_7_fu_2214_p2 & tmp_116_6_fu_2203_p2) & tmp_116_5_fu_2192_p2) & tmp_116_4_fu_2181_p2) & tmp_116_3_fu_2170_p2) & tmp_116_2_fu_2159_p2) & tmp_116_1_fu_2148_p2) & tmp_72_fu_2137_p2);
    keyPar_2_7_fu_743_p2 <= (tmp6_fu_737_p2 xor tmp_fu_713_p2);
    keyPar_3_7_fu_2433_p2 <= (tmp13_fu_2427_p2 xor tmp9_fu_2403_p2);
    keyState_assign_load_fu_623_p3 <= 
        ap_const_lv64_CCD044A12FDB3E13 when (firstBlock(0) = '1') else 
        tmp_19_fu_489_p1;
    not_lastBlock_fu_839_p2 <= (lastBlock xor ap_const_lv1_1);
    or_cond1_fu_2509_p2 <= (tmp_73_fu_2220_p2 and not_lastBlock_reg_2630);
    or_cond2_fu_2566_p2 <= (tmp_73_fu_2220_p2 and lastBlock);
    or_cond_fu_2445_p2 <= (tmp_90_fu_2439_p2 and lastBlock);
    output_r <= (((tmp_116_3_fu_2170_p2 & tmp_116_2_fu_2159_p2) & tmp_116_1_fu_2148_p2) & tmp_72_fu_2137_p2);

    -- output_r_ap_vld assign process. --
    output_r_ap_vld_assign_proc : process(ap_CS_fsm, tmp_14_fu_845_p2, tmp_94_fu_2490_p2, ap_reg_ioackin_output_r_ap_ack)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_14_fu_845_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_94_fu_2490_p2)) and (ap_const_logic_0 = ap_reg_ioackin_output_r_ap_ack))) then 
            output_r_ap_vld <= ap_const_logic_1;
        else 
            output_r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    round_1_fu_850_p2 <= std_logic_vector(unsigned(round_reg_355) + unsigned(ap_const_lv6_1));
    storemerge10_fu_1734_p3 <= 
        tmp_79_1_fu_1704_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_86_1_fu_1726_p3;
    storemerge11_fu_1798_p3 <= 
        tmp_79_2_fu_1768_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_86_2_fu_1790_p3;
    storemerge12_fu_1862_p3 <= 
        tmp_79_3_fu_1832_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_86_3_fu_1854_p3;
    storemerge13_fu_1926_p3 <= 
        tmp_102_s_fu_1896_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_109_s_fu_1918_p3;
    storemerge14_fu_1990_p3 <= 
        tmp_102_1_fu_1960_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_109_1_fu_1982_p3;
    storemerge15_fu_2054_p3 <= 
        tmp_102_2_fu_2024_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_109_2_fu_2046_p3;
    storemerge16_fu_2118_p3 <= 
        tmp_102_3_fu_2088_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_109_3_fu_2110_p3;

    -- storemerge17_phi_fu_380_p4 assign process. --
    storemerge17_phi_fu_380_p4_assign_proc : process(tmp_97_fu_2524_p3, or_cond1_fu_2509_p2, keyIn_1_fu_2246_p3, ap_sig_bdd_112)
    begin
        if (ap_sig_bdd_112) then
            if (not((ap_const_lv1_0 = or_cond1_fu_2509_p2))) then 
                storemerge17_phi_fu_380_p4 <= keyIn_1_fu_2246_p3;
            elsif ((ap_const_lv1_0 = or_cond1_fu_2509_p2)) then 
                storemerge17_phi_fu_380_p4 <= tmp_97_fu_2524_p3;
            else 
                storemerge17_phi_fu_380_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            storemerge17_phi_fu_380_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- storemerge18_phi_fu_389_p4 assign process. --
    storemerge18_phi_fu_389_p4_assign_proc : process(tmp_98_fu_2539_p9, tmp_73_fu_2220_p2, ap_sig_bdd_112)
    begin
        if (ap_sig_bdd_112) then
            if (not((ap_const_lv1_0 = tmp_73_fu_2220_p2))) then 
                storemerge18_phi_fu_389_p4 <= ap_const_lv512_lc_1;
            elsif ((ap_const_lv1_0 = tmp_73_fu_2220_p2)) then 
                storemerge18_phi_fu_389_p4 <= tmp_98_fu_2539_p9;
            else 
                storemerge18_phi_fu_389_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            storemerge18_phi_fu_389_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    storemerge1_fu_1670_p3 <= 
        tmp_79_s_fu_1640_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_86_s_fu_1662_p3;
    storemerge2_fu_1158_p3 <= 
        tmp_33_s_fu_1128_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_40_s_fu_1150_p3;
    storemerge3_fu_1222_p3 <= 
        tmp_33_1_fu_1192_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_40_1_fu_1214_p3;
    storemerge4_fu_1286_p3 <= 
        tmp_33_2_fu_1256_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_40_2_fu_1278_p3;
    storemerge5_fu_1350_p3 <= 
        tmp_33_3_fu_1320_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_40_3_fu_1342_p3;
    storemerge6_fu_1414_p3 <= 
        tmp_56_s_fu_1384_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_63_s_fu_1406_p3;
    storemerge7_fu_1478_p3 <= 
        tmp_56_1_fu_1448_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_63_1_fu_1470_p3;
    storemerge8_fu_1542_p3 <= 
        tmp_56_2_fu_1512_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_63_2_fu_1534_p3;
    storemerge9_fu_1606_p3 <= 
        tmp_56_3_fu_1576_p3 when (is_lo_2_fu_896_p3(0) = '1') else 
        tmp_63_3_fu_1598_p3;
    storemerge_fu_2468_p3 <= 
        ap_const_lv64_FF00000000000008 when (or_cond_fu_2445_p2(0) = '1') else 
        tmp_124_fu_2315_p1;
    subround_assign_v_cast_cast_fu_866_p3 <= 
        ap_const_lv5_E when (tmp_15_fu_856_p2(0) = '1') else 
        ap_const_lv5_1;
    subround_fu_874_p2 <= std_logic_vector(unsigned(tmp_32_fu_862_p1) + unsigned(subround_assign_v_cast_cast_fu_866_p3));
    tmp10_fu_2409_p2 <= (tmp_83_fu_2325_p4 xor tmp_80_fu_2305_p4);
    tmp11_fu_2415_p2 <= (tmp_74_fu_2255_p4 xor ap_const_lv64_1BD11BDAA9FC1A22);
    tmp12_fu_2421_p2 <= (tmp11_fu_2415_p2 xor tmp_77_fu_2275_p4);
    tmp13_fu_2427_p2 <= (tmp12_fu_2421_p2 xor tmp10_fu_2409_p2);
    tmp1_fu_701_p2 <= (keyState_assign_load_fu_623_p3 xor initKeyState_load_8_fu_615_p3);
    tmp2_fu_707_p2 <= (initKeyState_load_8_1_fu_607_p3 xor initKeyState_load_8_2_fu_599_p3);
    tmp3_fu_719_p2 <= (initKeyState_load_8_3_fu_591_p3 xor initKeyState_load_8_4_fu_583_p3);
    tmp4_fu_725_p2 <= (initKeyState_load_8_6_fu_567_p3 xor ap_const_lv64_1BD11BDAA9FC1A22);
    tmp5_fu_731_p2 <= (tmp4_fu_725_p2 xor initKeyState_load_8_5_fu_575_p3);
    tmp6_fu_737_p2 <= (tmp5_fu_731_p2 xor tmp3_fu_719_p2);
    tmp7_fu_2391_p2 <= (tmp_125_fu_2365_p1 xor tmp_86_fu_2355_p4);
    tmp8_fu_2397_p2 <= (tmp_85_fu_2345_p4 xor tmp_84_fu_2335_p4);
    tmp9_fu_2403_p2 <= (tmp8_fu_2397_p2 xor tmp7_fu_2391_p2);
    tmp_100_fu_1370_p1 <= tmp_52_fu_1166_p2(51 - 1 downto 0);
    tmp_101_1_fu_1950_p4 <= tmp_89_3_fu_1870_p2(63 downto 29);
    tmp_101_2_fu_2014_p4 <= tmp_89_2_fu_1806_p2(63 downto 8);
    tmp_101_3_fu_2078_p4 <= tmp_89_1_fu_1742_p2(63 downto 42);
    tmp_101_fu_1392_p1 <= tmp_52_fu_1166_p2(31 - 1 downto 0);
    tmp_102_1_fu_1960_p3 <= (tmp_118_fu_1946_p1 & tmp_101_1_fu_1950_p4);
    tmp_102_2_fu_2024_p3 <= (tmp_120_fu_2010_p1 & tmp_101_2_fu_2014_p4);
    tmp_102_3_fu_2088_p3 <= (tmp_122_fu_2074_p1 & tmp_101_3_fu_2078_p4);
    tmp_102_fu_1434_p1 <= tmp_43_3_fu_1358_p2(14 - 1 downto 0);
    tmp_102_s_fu_1896_p3 <= (tmp_116_fu_1882_p1 & tmp_66_fu_1886_p4);
    tmp_103_fu_1456_p1 <= tmp_43_3_fu_1358_p2(37 - 1 downto 0);
    tmp_104_fu_1498_p1 <= tmp_43_2_fu_1294_p2(54 - 1 downto 0);
    tmp_105_fu_1520_p1 <= tmp_43_2_fu_1294_p2(50 - 1 downto 0);
    tmp_106_fu_1562_p1 <= tmp_43_1_fu_1230_p2(47 - 1 downto 0);
    tmp_107_fu_1584_p1 <= tmp_43_1_fu_1230_p2(22 - 1 downto 0);
    tmp_108_1_fu_1972_p4 <= tmp_89_3_fu_1870_p2(63 downto 55);
    tmp_108_2_fu_2036_p4 <= tmp_89_2_fu_1806_p2(63 downto 10);
    tmp_108_3_fu_2100_p4 <= tmp_89_1_fu_1742_p2(63 downto 8);
    tmp_108_fu_1626_p1 <= tmp_58_fu_1422_p2(39 - 1 downto 0);
    tmp_109_1_fu_1982_p3 <= (tmp_119_fu_1968_p1 & tmp_108_1_fu_1972_p4);
    tmp_109_2_fu_2046_p3 <= (tmp_121_fu_2032_p1 & tmp_108_2_fu_2036_p4);
    tmp_109_3_fu_2110_p3 <= (tmp_123_fu_2096_p1 & tmp_108_3_fu_2100_p4);
    tmp_109_fu_1648_p1 <= tmp_58_fu_1422_p2(47 - 1 downto 0);
    tmp_109_s_fu_1918_p3 <= (tmp_117_fu_1904_p1 & tmp_68_fu_1908_p4);
    tmp_110_fu_1690_p1 <= tmp_66_3_fu_1614_p2(35 - 1 downto 0);
    tmp_111_fu_1712_p1 <= tmp_66_3_fu_1614_p2(15 - 1 downto 0);
    tmp_112_1_fu_1998_p2 <= (storemerge14_fu_1990_p3 xor tmp_94_1_fu_1940_p2);
    tmp_112_2_fu_2062_p2 <= (storemerge15_fu_2054_p3 xor tmp_94_2_fu_2004_p2);
    tmp_112_3_fu_2126_p2 <= (storemerge16_fu_2118_p3 xor tmp_94_3_fu_2068_p2);
    tmp_112_fu_1754_p1 <= tmp_66_2_fu_1550_p2(25 - 1 downto 0);
    tmp_113_fu_1776_p1 <= tmp_66_2_fu_1550_p2(28 - 1 downto 0);
    tmp_114_fu_1818_p1 <= tmp_66_1_fu_1486_p2(21 - 1 downto 0);
    tmp_115_1_fu_2143_p2 <= (tmp_6_reg_2595 and enableData_1_reg_366);
    tmp_115_2_fu_2154_p2 <= (tmp_10_reg_2600 and enableData_1_reg_366);
    tmp_115_3_fu_2165_p2 <= (tmp_11_reg_2605 and enableData_1_reg_366);
    tmp_115_4_fu_2176_p2 <= (tmp_12_reg_2610 and enableData_1_reg_366);
    tmp_115_5_fu_2187_p2 <= (tmp_13_reg_2615 and enableData_1_reg_366);
    tmp_115_6_fu_2198_p2 <= (tmp_16_reg_2620 and enableData_1_reg_366);
    tmp_115_7_fu_2209_p2 <= (tmp_17_reg_2625 and enableData_1_reg_366);
    tmp_115_fu_1840_p1 <= tmp_66_1_fu_1486_p2(25 - 1 downto 0);
    tmp_116_1_fu_2148_p2 <= (tmp_115_1_fu_2143_p2 xor tmp_20_1_fu_946_p2);
    tmp_116_2_fu_2159_p2 <= (tmp_115_2_fu_2154_p2 xor tmp_20_2_fu_972_p2);
    tmp_116_3_fu_2170_p2 <= (tmp_115_3_fu_2165_p2 xor tmp_20_3_fu_998_p2);
    tmp_116_4_fu_2181_p2 <= (tmp_115_4_fu_2176_p2 xor tmp_20_4_fu_1024_p2);
    tmp_116_5_fu_2192_p2 <= (tmp_115_5_fu_2187_p2 xor tmp_20_5_fu_1050_p2);
    tmp_116_6_fu_2203_p2 <= (tmp_115_6_fu_2198_p2 xor tmp_20_6_fu_1076_p2);
    tmp_116_7_fu_2214_p2 <= (tmp_115_7_fu_2209_p2 xor tmp_20_7_fu_1102_p2);
    tmp_116_fu_1882_p1 <= tmp_64_fu_1678_p2(56 - 1 downto 0);
    tmp_117_fu_1904_p1 <= tmp_64_fu_1678_p2(20 - 1 downto 0);
    tmp_118_fu_1946_p1 <= tmp_89_3_fu_1870_p2(29 - 1 downto 0);
    tmp_119_fu_1968_p1 <= tmp_89_3_fu_1870_p2(55 - 1 downto 0);
    tmp_120_fu_2010_p1 <= tmp_89_2_fu_1806_p2(8 - 1 downto 0);
    tmp_121_fu_2032_p1 <= tmp_89_2_fu_1806_p2(10 - 1 downto 0);
    tmp_122_fu_2074_p1 <= tmp_89_1_fu_1742_p2(42 - 1 downto 0);
    tmp_123_fu_2096_p1 <= tmp_89_1_fu_1742_p2(8 - 1 downto 0);
    tmp_124_fu_2315_p1 <= tweak(64 - 1 downto 0);
    tmp_125_fu_2365_p1 <= keyIn_1_fu_2246_p3(64 - 1 downto 0);
    tmp_126_fu_2369_p1 <= keyIn_1_fu_2246_p3(320 - 1 downto 0);
    tmp_14_fu_845_p2 <= "1" when (unsigned(round_reg_355) < unsigned(total_round_cast_cast_reg_2585)) else "0";
    tmp_15_fu_856_p2 <= "1" when (unsigned(round_reg_355) > unsigned(ap_const_lv6_11)) else "0";
    tmp_18_fu_884_p2 <= "1" when (unsigned(round_reg_355) > unsigned(ap_const_lv6_12)) else "0";
    tmp_19_fu_489_p1 <= keyState(64 - 1 downto 0);
    tmp_1_fu_749_p2 <= std_logic_vector(unsigned(tmp_9_fu_685_p4) + unsigned(initKeyState_load_8_5_fu_575_p3));
    tmp_20_1_fu_946_p2 <= std_logic_vector(unsigned(tmp_35_fu_936_p4) + unsigned(tmp_34_fu_926_p4));
    tmp_20_2_fu_972_p2 <= std_logic_vector(unsigned(tmp_37_fu_962_p4) + unsigned(tmp_36_fu_952_p4));
    tmp_20_3_fu_998_p2 <= std_logic_vector(unsigned(tmp_39_fu_988_p4) + unsigned(tmp_38_fu_978_p4));
    tmp_20_4_fu_1024_p2 <= std_logic_vector(unsigned(tmp_41_fu_1014_p4) + unsigned(tmp_40_fu_1004_p4));
    tmp_20_5_fu_1050_p2 <= std_logic_vector(unsigned(tmp_43_fu_1040_p4) + unsigned(tmp_42_fu_1030_p4));
    tmp_20_6_fu_1076_p2 <= std_logic_vector(unsigned(tmp_45_fu_1066_p4) + unsigned(tmp_44_fu_1056_p4));
    tmp_20_7_fu_1102_p2 <= std_logic_vector(unsigned(tmp_47_fu_1092_p4) + unsigned(tmp_46_fu_1082_p4));
    tmp_20_fu_493_p4 <= keyState(127 downto 64);
    tmp_21_fu_503_p4 <= keyState(191 downto 128);
    tmp_22_fu_513_p4 <= keyState(255 downto 192);
    tmp_23_fu_523_p4 <= keyState(319 downto 256);
    tmp_24_fu_533_p4 <= keyState(383 downto 320);
    tmp_25_1_fu_1172_p2 <= std_logic_vector(unsigned(tmp_20_3_fu_998_p2) + unsigned(tmp_20_2_fu_972_p2));
    tmp_25_2_fu_1236_p2 <= std_logic_vector(unsigned(tmp_20_5_fu_1050_p2) + unsigned(tmp_20_4_fu_1024_p2));
    tmp_25_3_fu_1300_p2 <= std_logic_vector(unsigned(tmp_20_7_fu_1102_p2) + unsigned(tmp_20_6_fu_1076_p2));
    tmp_25_fu_543_p4 <= keyState(447 downto 384);
    tmp_26_fu_553_p4 <= keyState(511 downto 448);
    tmp_27_fu_671_p4 <= tmp_8_fu_661_p4(63 downto 62);
    tmp_28_fu_761_p9 <= (((((((initKeyState_load_8_6_fu_567_p3 & tmp_1_fu_749_p2) & tmp_3_fu_755_p2) & initKeyState_load_8_3_fu_591_p3) & initKeyState_load_8_2_fu_599_p3) & initKeyState_load_8_1_fu_607_p3) & initKeyState_load_8_fu_615_p3) & keyState_assign_load_fu_623_p3);
    tmp_29_fu_787_p9 <= (((((((keyPar_2_7_fu_743_p2 & initKeyState_load_8_6_fu_567_p3) & initKeyState_load_8_5_fu_575_p3) & initKeyState_load_8_4_fu_583_p3) & initKeyState_load_8_3_fu_591_p3) & initKeyState_load_8_2_fu_599_p3) & initKeyState_load_8_1_fu_607_p3) & initKeyState_load_8_fu_615_p3);
    tmp_2_fu_409_p1 <= data(64 - 1 downto 0);
    tmp_30_fu_813_p6 <= ((((tmp_5_fu_643_p2 & tmp_s_fu_695_p2) & tmp_27_fu_671_p4) & ap_const_lv2_3) & tmp_31_fu_681_p1);
    tmp_31_fu_681_p1 <= tmp_8_fu_661_p4(60 - 1 downto 0);
    tmp_32_1_fu_1182_p4 <= tmp_20_3_fu_998_p2(63 downto 34);
    tmp_32_2_fu_1246_p4 <= tmp_20_5_fu_1050_p2(63 downto 30);
    tmp_32_3_fu_1310_p4 <= tmp_20_7_fu_1102_p2(63 downto 40);
    tmp_32_fu_862_p1 <= round_reg_355(5 - 1 downto 0);
    tmp_33_1_fu_1192_p3 <= (tmp_63_fu_1178_p1 & tmp_32_1_fu_1182_p4);
    tmp_33_2_fu_1256_p3 <= (tmp_69_fu_1242_p1 & tmp_32_2_fu_1246_p4);
    tmp_33_3_fu_1320_p3 <= (tmp_88_fu_1306_p1 & tmp_32_3_fu_1310_p4);
    tmp_33_fu_920_p2 <= std_logic_vector(unsigned(tmp_55_fu_916_p1) + unsigned(tmp_51_fu_908_p1));
    tmp_33_s_fu_1128_p3 <= (tmp_57_fu_1114_p1 & tmp_49_fu_1118_p4);
    tmp_34_fu_926_p4 <= state(127 downto 64);
    tmp_35_fu_936_p4 <= subkey(127 downto 64);
    tmp_36_fu_952_p4 <= state(191 downto 128);
    tmp_37_fu_962_p4 <= subkey(191 downto 128);
    tmp_38_fu_978_p4 <= state(255 downto 192);
    tmp_39_1_fu_1204_p4 <= tmp_20_3_fu_998_p2(63 downto 28);
    tmp_39_2_fu_1268_p4 <= tmp_20_5_fu_1050_p2(63 downto 45);
    tmp_39_3_fu_1332_p4 <= tmp_20_7_fu_1102_p2(63 downto 27);
    tmp_39_fu_988_p4 <= subkey(255 downto 192);
    tmp_3_fu_755_p2 <= std_logic_vector(unsigned(tmp_5_fu_643_p2) + unsigned(initKeyState_load_8_4_fu_583_p3));
    tmp_40_1_fu_1214_p3 <= (tmp_67_fu_1200_p1 & tmp_39_1_fu_1204_p4);
    tmp_40_2_fu_1278_p3 <= (tmp_82_fu_1264_p1 & tmp_39_2_fu_1268_p4);
    tmp_40_3_fu_1342_p3 <= (tmp_89_fu_1328_p1 & tmp_39_3_fu_1332_p4);
    tmp_40_fu_1004_p4 <= state(319 downto 256);
    tmp_40_s_fu_1150_p3 <= (tmp_61_fu_1136_p1 & tmp_50_fu_1140_p4);
    tmp_41_fu_1014_p4 <= subkey(319 downto 256);
    tmp_42_fu_1030_p4 <= state(383 downto 320);
    tmp_43_1_fu_1230_p2 <= (storemerge3_fu_1222_p3 xor tmp_25_1_fu_1172_p2);
    tmp_43_2_fu_1294_p2 <= (storemerge4_fu_1286_p3 xor tmp_25_2_fu_1236_p2);
    tmp_43_3_fu_1358_p2 <= (storemerge5_fu_1350_p3 xor tmp_25_3_fu_1300_p2);
    tmp_43_fu_1040_p4 <= subkey(383 downto 320);
    tmp_44_fu_1056_p4 <= state(447 downto 384);
    tmp_45_fu_1066_p4 <= subkey(447 downto 384);
    tmp_46_fu_1082_p4 <= state(511 downto 448);
    tmp_47_fu_1092_p4 <= subkey(511 downto 448);
    tmp_48_1_fu_1428_p2 <= std_logic_vector(unsigned(tmp_43_3_fu_1358_p2) + unsigned(tmp_25_2_fu_1236_p2));
    tmp_48_2_fu_1492_p2 <= std_logic_vector(unsigned(tmp_43_2_fu_1294_p2) + unsigned(tmp_25_3_fu_1300_p2));
    tmp_48_3_fu_1556_p2 <= std_logic_vector(unsigned(tmp_43_1_fu_1230_p2) + unsigned(tmp_48_fu_1108_p2));
    tmp_48_fu_1108_p2 <= std_logic_vector(unsigned(tmp_20_1_fu_946_p2) + unsigned(tmp_33_fu_920_p2));
    tmp_49_fu_1118_p4 <= tmp_20_1_fu_946_p2(63 downto 25);
    tmp_4_fu_639_p1 <= std_logic_vector(resize(unsigned(size),64));
    tmp_50_fu_1140_p4 <= tmp_20_1_fu_946_p2(63 downto 18);
    tmp_51_fu_908_p1 <= state(64 - 1 downto 0);
    tmp_52_fu_1166_p2 <= (storemerge2_fu_1158_p3 xor tmp_48_fu_1108_p2);
    tmp_53_fu_1364_p2 <= std_logic_vector(unsigned(tmp_52_fu_1166_p2) + unsigned(tmp_25_1_fu_1172_p2));
    tmp_54_fu_1374_p4 <= tmp_52_fu_1166_p2(63 downto 51);
    tmp_55_1_fu_1438_p4 <= tmp_43_3_fu_1358_p2(63 downto 14);
    tmp_55_2_fu_1502_p4 <= tmp_43_2_fu_1294_p2(63 downto 54);
    tmp_55_3_fu_1566_p4 <= tmp_43_1_fu_1230_p2(63 downto 47);
    tmp_55_fu_916_p1 <= subkey(64 - 1 downto 0);
    tmp_56_1_fu_1448_p3 <= (tmp_102_fu_1434_p1 & tmp_55_1_fu_1438_p4);
    tmp_56_2_fu_1512_p3 <= (tmp_104_fu_1498_p1 & tmp_55_2_fu_1502_p4);
    tmp_56_3_fu_1576_p3 <= (tmp_106_fu_1562_p1 & tmp_55_3_fu_1566_p4);
    tmp_56_fu_1396_p4 <= tmp_52_fu_1166_p2(63 downto 31);
    tmp_56_s_fu_1384_p3 <= (tmp_100_fu_1370_p1 & tmp_54_fu_1374_p4);
    tmp_57_fu_1114_p1 <= tmp_20_1_fu_946_p2(25 - 1 downto 0);
    tmp_58_fu_1422_p2 <= (storemerge6_fu_1414_p3 xor tmp_53_fu_1364_p2);
    tmp_59_fu_1620_p2 <= std_logic_vector(unsigned(tmp_58_fu_1422_p2) + unsigned(tmp_48_1_fu_1428_p2));
    tmp_5_fu_643_p2 <= std_logic_vector(unsigned(initByteCounter1_fu_631_p3) + unsigned(tmp_4_fu_639_p1));
    tmp_60_fu_1630_p4 <= tmp_58_fu_1422_p2(63 downto 39);
    tmp_61_fu_1136_p1 <= tmp_20_1_fu_946_p2(18 - 1 downto 0);
    tmp_62_1_fu_1460_p4 <= tmp_43_3_fu_1358_p2(63 downto 37);
    tmp_62_2_fu_1524_p4 <= tmp_43_2_fu_1294_p2(63 downto 50);
    tmp_62_3_fu_1588_p4 <= tmp_43_1_fu_1230_p2(63 downto 22);
    tmp_62_fu_1652_p4 <= tmp_58_fu_1422_p2(63 downto 47);
    tmp_63_1_fu_1470_p3 <= (tmp_103_fu_1456_p1 & tmp_62_1_fu_1460_p4);
    tmp_63_2_fu_1534_p3 <= (tmp_105_fu_1520_p1 & tmp_62_2_fu_1524_p4);
    tmp_63_3_fu_1598_p3 <= (tmp_107_fu_1584_p1 & tmp_62_3_fu_1588_p4);
    tmp_63_fu_1178_p1 <= tmp_20_3_fu_998_p2(34 - 1 downto 0);
    tmp_63_s_fu_1406_p3 <= (tmp_101_fu_1392_p1 & tmp_56_fu_1396_p4);
    tmp_64_fu_1678_p2 <= (storemerge1_fu_1670_p3 xor tmp_59_fu_1620_p2);
    tmp_65_fu_1876_p2 <= std_logic_vector(unsigned(tmp_64_fu_1678_p2) + unsigned(tmp_71_1_fu_1684_p2));
    tmp_66_1_fu_1486_p2 <= (storemerge7_fu_1478_p3 xor tmp_48_1_fu_1428_p2);
    tmp_66_2_fu_1550_p2 <= (storemerge8_fu_1542_p3 xor tmp_48_2_fu_1492_p2);
    tmp_66_3_fu_1614_p2 <= (storemerge9_fu_1606_p3 xor tmp_48_3_fu_1556_p2);
    tmp_66_fu_1886_p4 <= tmp_64_fu_1678_p2(63 downto 56);
    tmp_67_fu_1200_p1 <= tmp_20_3_fu_998_p2(28 - 1 downto 0);
    tmp_68_fu_1908_p4 <= tmp_64_fu_1678_p2(63 downto 20);
    tmp_69_fu_1242_p1 <= tmp_20_5_fu_1050_p2(30 - 1 downto 0);
    tmp_70_fu_1934_p2 <= (storemerge13_fu_1926_p3 xor tmp_65_fu_1876_p2);
    tmp_71_1_fu_1684_p2 <= std_logic_vector(unsigned(tmp_66_3_fu_1614_p2) + unsigned(tmp_48_2_fu_1492_p2));
    tmp_71_2_fu_1748_p2 <= std_logic_vector(unsigned(tmp_66_2_fu_1550_p2) + unsigned(tmp_48_3_fu_1556_p2));
    tmp_71_3_fu_1812_p2 <= std_logic_vector(unsigned(tmp_66_1_fu_1486_p2) + unsigned(tmp_53_fu_1364_p2));
    tmp_71_fu_2132_p2 <= (tmp_2_reg_2590 and enableData_1_reg_366);
    tmp_72_fu_2137_p2 <= (tmp_71_fu_2132_p2 xor tmp_33_fu_920_p2);
    tmp_73_fu_2220_p2 <= "1" when (round_reg_355 = ap_const_lv6_12) else "0";
    tmp_74_fu_2255_p4 <= keyIn_1_fu_2246_p3(511 downto 448);
    tmp_75_fu_2265_p1 <= std_logic_vector(resize(unsigned(subround_fu_874_p2),64));
    tmp_76_fu_2269_p2 <= std_logic_vector(unsigned(tmp_74_fu_2255_p4) + unsigned(tmp_75_fu_2265_p1));
    tmp_77_fu_2275_p4 <= keyIn_1_fu_2246_p3(447 downto 384);
    tmp_78_1_fu_1694_p4 <= tmp_66_3_fu_1614_p2(63 downto 35);
    tmp_78_2_fu_1758_p4 <= tmp_66_2_fu_1550_p2(63 downto 25);
    tmp_78_3_fu_1822_p4 <= tmp_66_1_fu_1486_p2(63 downto 21);
    tmp_78_fu_2289_p4 <= tweak(127 downto 64);
    tmp_79_1_fu_1704_p3 <= (tmp_110_fu_1690_p1 & tmp_78_1_fu_1694_p4);
    tmp_79_2_fu_1768_p3 <= (tmp_112_fu_1754_p1 & tmp_78_2_fu_1758_p4);
    tmp_79_3_fu_1832_p3 <= (tmp_114_fu_1818_p1 & tmp_78_3_fu_1822_p4);
    tmp_79_fu_2299_p2 <= std_logic_vector(unsigned(tmp_78_fu_2289_p4) + unsigned(tmp_77_fu_2275_p4));
    tmp_79_s_fu_1640_p3 <= (tmp_108_fu_1626_p1 & tmp_60_fu_1630_p4);
    tmp_7_cast_fu_657_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_649_p3),64));
    tmp_7_fu_649_p3 <= (firstBlock & ap_const_lv62_0);
    tmp_80_fu_2305_p4 <= keyIn_1_fu_2246_p3(383 downto 320);
    tmp_81_fu_2319_p2 <= std_logic_vector(unsigned(tmp_124_fu_2315_p1) + unsigned(tmp_80_fu_2305_p4));
    tmp_82_fu_1264_p1 <= tmp_20_5_fu_1050_p2(45 - 1 downto 0);
    tmp_83_fu_2325_p4 <= keyIn_1_fu_2246_p3(319 downto 256);
    tmp_84_fu_2335_p4 <= keyIn_1_fu_2246_p3(255 downto 192);
    tmp_85_1_fu_1716_p4 <= tmp_66_3_fu_1614_p2(63 downto 15);
    tmp_85_2_fu_1780_p4 <= tmp_66_2_fu_1550_p2(63 downto 28);
    tmp_85_3_fu_1844_p4 <= tmp_66_1_fu_1486_p2(63 downto 25);
    tmp_85_fu_2345_p4 <= keyIn_1_fu_2246_p3(191 downto 128);
    tmp_86_1_fu_1726_p3 <= (tmp_111_fu_1712_p1 & tmp_85_1_fu_1716_p4);
    tmp_86_2_fu_1790_p3 <= (tmp_113_fu_1776_p1 & tmp_85_2_fu_1780_p4);
    tmp_86_3_fu_1854_p3 <= (tmp_115_fu_1840_p1 & tmp_85_3_fu_1844_p4);
    tmp_86_fu_2355_p4 <= keyIn_1_fu_2246_p3(127 downto 64);
    tmp_86_s_fu_1662_p3 <= (tmp_109_fu_1648_p1 & tmp_62_fu_1652_p4);
    tmp_87_fu_2373_p5 <= (((tmp_76_fu_2269_p2 & tmp_79_fu_2299_p2) & tmp_81_fu_2319_p2) & tmp_126_fu_2369_p1);
    tmp_88_fu_1306_p1 <= tmp_20_7_fu_1102_p2(40 - 1 downto 0);
    tmp_89_1_fu_1742_p2 <= (storemerge10_fu_1734_p3 xor tmp_71_1_fu_1684_p2);
    tmp_89_2_fu_1806_p2 <= (storemerge11_fu_1798_p3 xor tmp_71_2_fu_1748_p2);
    tmp_89_3_fu_1870_p2 <= (storemerge12_fu_1862_p3 xor tmp_71_3_fu_1812_p2);
    tmp_89_fu_1328_p1 <= tmp_20_7_fu_1102_p2(27 - 1 downto 0);
    
    tmp_8_fu_661_p4_proc : process(tmp_7_cast_fu_657_p1, lastBlock)
    begin
        tmp_8_fu_661_p4 <= tmp_7_cast_fu_657_p1;
        tmp_8_fu_661_p4(63) <= lastBlock(0);
    end process;

    tmp_90_fu_2439_p2 <= "1" when (round_reg_355 = ap_const_lv6_11) else "0";
    tmp_91_fu_2450_p4 <= tweak(191 downto 64);
    tmp_92_fu_2460_p3 <= 
        ap_const_lv128_lc_2 when (or_cond_fu_2445_p2(0) = '1') else 
        tmp_91_fu_2450_p4;
    tmp_93_fu_2476_p3 <= (storemerge_fu_2468_p3 & tmp_92_fu_2460_p3);
    tmp_94_1_fu_1940_p2 <= std_logic_vector(unsigned(tmp_89_3_fu_1870_p2) + unsigned(tmp_71_2_fu_1748_p2));
    tmp_94_2_fu_2004_p2 <= std_logic_vector(unsigned(tmp_89_2_fu_1806_p2) + unsigned(tmp_71_3_fu_1812_p2));
    tmp_94_3_fu_2068_p2 <= std_logic_vector(unsigned(tmp_89_1_fu_1742_p2) + unsigned(tmp_59_fu_1620_p2));
    tmp_94_fu_2490_p2 <= "1" when (round_reg_355 = ap_const_lv6_25) else "0";
    tmp_96_fu_2514_p4 <= keyIn_1_fu_2246_p3(511 downto 64);
    tmp_97_fu_2524_p3 <= (keyPar_3_7_fu_2433_p2 & tmp_96_fu_2514_p4);
    tmp_98_fu_2539_p9 <= (((((((tmp_112_1_fu_1998_p2 & tmp_65_fu_1876_p2) & tmp_112_2_fu_2062_p2) & tmp_94_3_fu_2068_p2) & tmp_112_3_fu_2126_p2) & tmp_94_2_fu_2004_p2) & tmp_70_fu_1934_p2) & tmp_94_1_fu_1940_p2);
    tmp_9_fu_685_p4 <= ((tmp_27_fu_671_p4 & ap_const_lv2_3) & tmp_31_fu_681_p1);
    tmp_fu_713_p2 <= (tmp2_fu_707_p2 xor tmp1_fu_701_p2);
    tmp_s_fu_695_p2 <= (tmp_9_fu_685_p4 xor tmp_5_fu_643_p2);
    total_round_cast_cast_fu_401_p3 <= 
        ap_const_lv6_26 when (lastBlock(0) = '1') else 
        ap_const_lv6_13;
end behav;
