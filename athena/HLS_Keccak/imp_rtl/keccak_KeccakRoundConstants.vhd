-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.1
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity keccak_KeccakRoundConstants_rom is 
    generic(
             dwidth     : integer := 64; 
             awidth     : integer := 5; 
             mem_size    : integer := 32
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of keccak_KeccakRoundConstants_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "0000000000000000000000000000000000000000000000000000000000000001", 
    1 => "0000000000000000000000000000000000000000000000001000000010000010", 
    2 => "1000000000000000000000000000000000000000000000001000000010001010", 
    3 => "1000000000000000000000000000000010000000000000001000000000000000", 
    4 => "0000000000000000000000000000000000000000000000001000000010001011", 
    5 => "0000000000000000000000000000000010000000000000000000000000000001", 
    6 => "1000000000000000000000000000000010000000000000001000000010000001", 
    7 => "1000000000000000000000000000000000000000000000001000000000001001", 
    8 => "0000000000000000000000000000000000000000000000000000000010001010", 
    9 => "0000000000000000000000000000000000000000000000000000000010001000", 
    10 => "0000000000000000000000000000000010000000000000001000000000001001", 
    11 => "0000000000000000000000000000000010000000000000000000000000001010", 
    12 => "0000000000000000000000000000000010000000000000001000000010001011", 
    13 => "1000000000000000000000000000000000000000000000000000000010001011", 
    14 => "1000000000000000000000000000000000000000000000001000000010001001", 
    15 => "1000000000000000000000000000000000000000000000001000000000000011", 
    16 => "1000000000000000000000000000000000000000000000001000000000000010", 
    17 => "1000000000000000000000000000000000000000000000000000000010000000", 
    18 => "0000000000000000000000000000000000000000000000001000000000001010", 
    19 => "1000000000000000000000000000000010000000000000000000000000001010", 
    20 => "1000000000000000000000000000000010000000000000001000000010000001", 
    21 => "1000000000000000000000000000000000000000000000001000000010000000", 
    22 => "0000000000000000000000000000000010000000000000000000000000000001", 
    23 => "1000000000000000000000000000000010000000000000001000000000001000", 
    24 to 31=> "0000000000000000000000000000000000000000000000000000000000000000" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

    q0 <= mem(CONV_INTEGER(addr0_tmp));

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity keccak_KeccakRoundConstants is
    generic (
        DataWidth : INTEGER := 64;
        AddressRange : INTEGER := 32;
        AddressWidth : INTEGER := 5);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of keccak_KeccakRoundConstants is
    component keccak_KeccakRoundConstants_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;




begin
    keccak_KeccakRoundConstants_rom_U :  component keccak_KeccakRoundConstants_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


